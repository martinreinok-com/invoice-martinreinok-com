{"version":3,"sources":["data/initialData.ts","styles/styles.ts","styles/compose.ts","components/EditableInput.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","hooks/useOnClickOutside.ts","components/EditableFileImage.tsx","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/DownloadPDF.tsx","components/AddUIButton.js","components/ResetInvoice.js","components/InvoicePage.tsx","data/firebase.js","contexts/AuthContext.js","components/Login.js","components/PrivateRoute.js","App.tsx","index.tsx"],"names":["initialProductLine","description","quantity","rate","initialInvoice","logo","logoWidth","title","companyName","name","companyAddress","companyAddress2","companyCountry","billTo","clientName","clientAddress","clientAddress2","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","productLines","subTotalLabel","taxLabel","totalLabel","currency","notesLabel","notes","termLabel","term","styles","dark","color","white","backgroundColor","flex","display","flexDirection","flexWrap","paddingRight","width","row","borderBottom","marginTop","marginBottom","padding","paddingBottom","right","textAlign","bold","fontWeight","fontSize","page","fontFamily","span","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","placeholder","value","onChange","pdfMode","style","type","e","target","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","EditableFileImage","onChangeImage","onChangeWidth","fileInput","useRef","widthWrapper","useState","isEditing","setIsEditing","handleUpload","click","maxWidth","src","alt","onClick","min","max","marks","100","150","200","250","included","step","defaultValue","tabIndex","accept","files","length","reader","FileReader","result","readAsDataURL","Document","children","Page","size","View","Text","Download","data","show","setShow","timeout","setTimeout","clearTimeout","fileName","toLowerCase","aria-label","AddUIButton","buttonClass","buttonName","hoverTitle","onButtonClick","console","log","ResetInvoice","window","localStorage","removeItem","location","reload","getConfirmation","confirm","Font","register","family","fonts","InvoicePage","invoice","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","Date","valueOf","setDate","getDate","handleChange","newInvoice","handleProductLineChange","index","map","productLine","i","newProductLine","includes","n","parseFloat","toString","quantityNumber","rateNumber","match","taxRate","format","Array","isArray","key","toFixed","calculateAmount","filter","handleRemove","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","currentUser","setCurrentUser","loading","setLoading","onAuthStateChanged","user","login","email","password","signInWithEmailAndPassword","Provider","LogIn","usernameRef","passwordRef","error","setError","navigate","useNavigate","a","preventDefault","required","disabled","PrivateRoute","to","App","savedInvoice","getItem","JSON","parse","_e","path","element","setItem","stringify","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb71ce94.chunk.js","sourcesContent":["import { ProductLine, Invoice } from './types'\n\nexport const initialProductLine: ProductLine = {\n  description: '',\n  quantity: '1',\n  rate: '0.00',\n}\n\nexport const initialInvoice: Invoice = {\n  logo: '',\n  logoWidth: 100,\n  title: 'INVOICE',\n  companyName: '',\n  name: '',\n  companyAddress: '',\n  companyAddress2: '',\n  companyCountry: '',\n  billTo: 'Bill To:',\n  clientName: '',\n  clientAddress: '',\n  clientAddress2: '',\n  clientCountry: '',\n  invoiceTitleLabel: 'Invoice#',\n  invoiceTitle: '',\n  invoiceDateLabel: 'Invoice Date',\n  invoiceDate: '',\n  invoiceDueDateLabel: 'Due Date',\n  invoiceDueDate: '',\n  productLineDescription: 'Item Description',\n  productLineQuantity: 'Qty',\n  productLineQuantityRate: 'Rate',\n  productLineQuantityAmount: 'Amount',\n  productLines: [\n    {\n      description: 'Brochure Design',\n      quantity: '2',\n      rate: '100.00',\n    },\n    { ...initialProductLine },\n    { ...initialProductLine },\n  ],\n  subTotalLabel: 'Sub Total',\n  taxLabel: 'Sale Tax (10%)',\n  totalLabel: 'TOTAL',\n  currency: '€',\n  notesLabel: 'Notes (or delete to hide)',\n  notes: 'It was great doing business with you.',\n  termLabel: 'Terms & Conditions',\n  term: 'Please make the payment by the due date.',\n}\n","import { CSSClasses } from '../data/types'\n\nconst colorDark = '#222'\nconst colorDark2 = '#666'\nconst colorGray = '#e3e3e3'\nconst colorWhite = '#fff'\n\nconst styles: CSSClasses = {\n  dark: {\n    color: colorDark,\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '18%',\n  },\n\n  row: {\n    borderBottom: `1px solid ${colorGray}`,\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'p-4-8': {\n    padding: '4px 8px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'fs-20': {\n    fontSize: '20px',\n  },\n\n  'fs-45': {\n    fontSize: '45px',\n  },\n\n  page: {\n    fontFamily: 'Nunito',\n    fontSize: '13px',\n    color: '#555',\n    padding: '40px 35px',\n  },\n\n  span: {\n    padding: '4px 12px 4px 0',\n  },\n\n  logo: {\n    display: 'block',\n  }\n}\n\nexport default styles\n","import ReactPDF from '@react-pdf/renderer'\nimport styles from './styles'\n\nconst compose = (classes: string): ReactPDF.Styles => {\n  const css: ReactPDF.Styles = {}\n\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\n\n  classesArray.forEach((className) => {\n    if (typeof styles[className] !== undefined) {\n      Object.assign(css, styles[className])\n    }\n  })\n\n  return css\n}\n\nexport default compose\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <input\n          type=\"text\"\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableInput\n","import React, { FC } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n  rows?: number\n}\n\nconst EditableTextarea: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  rows,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <TextareaAutosize\n          minRows={rows || 1}\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableTextarea\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  value?: string\n  selected?: Date\n  onChange?: (date: Date | [Date, Date] | null) => void\n  pdfMode?: boolean\n}\n\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableCalendarInput\n","import { RefObject, useEffect } from 'react'\n\ntype AnyEvent = MouseEvent | TouchEvent\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: AnyEvent) => void,\n) {\n  useEffect(() => {\n    const listener = (event: AnyEvent) => {\n      const el = ref?.current\n\n      // Do nothing if clicking ref's element or descendent elements\n      if (!el || el.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(`mousedown`, listener)\n    document.addEventListener(`touchstart`, listener)\n\n    return () => {\n      document.removeEventListener(`mousedown`, listener)\n      document.removeEventListener(`touchstart`, listener)\n    }\n\n    // Reload only if ref or handler changes\n  }, [ref, handler])\n}\n\nexport default useOnClickOutside\n","import React, { FC, useRef, useState } from 'react'\nimport Slider from 'rc-slider'\nimport { Image } from '@react-pdf/renderer'\nimport useOnClickOutside from '../hooks/useOnClickOutside'\nimport compose from '../styles/compose'\nimport 'rc-slider/assets/index.css'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  width?: number\n  onChangeImage?: (value: string) => void\n  onChangeWidth?: (value: number) => void\n  pdfMode?: boolean\n}\n\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\n  const fileInput = useRef<HTMLInputElement>(null)\n  const widthWrapper = useRef<HTMLDivElement>(null)\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const marks = {\n    100: '100px',\n    150: '150px',\n    200: '200px',\n    250: '250px'\n  }\n\n  const handleClickOutside = () => {\n    if (isEditing) {\n      setIsEditing(false)\n    }\n  }\n\n  useOnClickOutside(widthWrapper, handleClickOutside)\n\n  const handleUpload = () => {\n    fileInput?.current?.click()\n  }\n\n  const handleChangeImage = () => {\n    if (fileInput?.current?.files) {\n      const files = fileInput.current.files\n\n      if (files.length > 0 && typeof onChangeImage === 'function') {\n        const reader = new FileReader()\n\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            onChangeImage(reader.result)\n          }\n        })\n\n        reader.readAsDataURL(files[0])\n      }\n    }\n  }\n\n  const handleChangeWidth = (value: number) => {\n    if (typeof onChangeWidth === 'function') {\n      onChangeWidth(value)\n    }\n  }\n\n  const handleEdit = () => {\n    setIsEditing(!isEditing)\n  }\n\n  const clearImage = () => {\n    if (typeof onChangeImage === 'function') {\n      onChangeImage('')\n    }\n  }\n\n  if (pdfMode) {\n    if (value) {\n      return (\n        <Image\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\n          src={value}\n        />\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\n      {!value ? (\n        <button\n          type=\"button\"\n          className=\"image__upload\"\n          onClick={handleUpload}\n        >\n          {placeholder}\n        </button>\n      ) : (\n        <>\n          <img\n            src={value}\n            className=\"image__img\"\n            alt={placeholder}\n            style={{ maxWidth: width || 100}}\n          />\n\n          <button\n            type=\"button\"\n            className=\"image__change\"\n            onClick={handleUpload}\n          >\n            Change Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__edit\"\n            onClick={handleEdit}\n          >\n            Resize Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__remove\"\n            onClick={clearImage}\n          >\n            Remove\n          </button>\n\n          {isEditing && (\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\n            </div>\n          )}\n        </>\n      )}\n\n      <input\n        ref={fileInput}\n        tabIndex={-1}\n        type=\"file\"\n        accept=\"image/*\"\n        className=\"image__file\"\n        onChange={handleChangeImage}\n      />\n    </div>\n  )\n}\n\nexport default EditableFileImage\n","import React, { FC } from 'react'\nimport { Document as PdfDocument } from '@react-pdf/renderer'\n\ninterface Props {\n  pdfMode?: boolean\n}\n\nconst Document: FC<Props> = ({ pdfMode, children }) => {\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\n}\n\nexport default Document\n","import React, { FC } from 'react'\nimport { Page as PdfPage } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\n          {children}\n        </PdfPage>\n      ) : (\n        <div className={'page ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default Page\n","import React, { FC } from 'react'\nimport { View as PdfView } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\n      ) : (\n        <div className={'view ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default View\n","import React, { FC } from 'react'\nimport { Text as PdfText } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n  children?: string\n}\n\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\n      ) : (\n        <span className={'span ' + (className ? className : '')}>{children}</span>\n      )}\n    </>\n  )\n}\n\nexport default Text\n","import React, { FC, useEffect, useState } from 'react'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Invoice } from '../data/types'\nimport InvoicePage from './InvoicePage'\n\ninterface Props {\n  data: Invoice\n}\n\nconst Download: FC<Props> = ({ data }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  useEffect(() => {\n    setShow(false)\n\n    const timeout = setTimeout(() => {\n      setShow(true)\n    }, 500)\n\n    return () => clearTimeout(timeout)\n  }, [data])\n\n  return (\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Save PDF\">\n      {show && (\n        <PDFDownloadLink\n          document={<InvoicePage pdfMode={true} data={data} />}\n          fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\n          aria-label=\"Save PDF\"\n        ></PDFDownloadLink>\n      )}\n    </div>\n  )\n}\n\nexport default Download\n","import React from 'react'\r\n\r\n\r\nconst AddUIButton = ({buttonClass, buttonName, hoverTitle, onButtonClick }) => {\r\n\r\n    function buttonClick() {\r\n        console.log('Button click :)');\r\n        if (typeof onButtonClick === 'function') {\r\n            onButtonClick()\r\n        } else {console.log(\"onButtonClick is not a function\")}\r\n        \r\n    }\r\n\r\n  return (\r\n    <button  \r\n    onClick={buttonClick}\r\n    className={buttonClass} \r\n    title={hoverTitle}>\r\n        <span>{buttonName}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddUIButton\r\n","function deleteLocalStorage(){\r\n    window.localStorage.removeItem(\"invoiceData\")\r\n}\r\n\r\nfunction ResetInvoice() {\r\n  deleteLocalStorage()\r\n  window.location.reload();\r\n  \r\n}\r\n\r\nexport default function getConfirmation(){\r\n  var returnVal = window.confirm(\"This will reset the form, press OK to confirm.\");\r\n  if ( returnVal === true ){\r\n      ResetInvoice();\r\n   }\r\n}\r\n","import React, { FC, useState, useEffect } from 'react'\nimport { Invoice, ProductLine } from '../data/types'\nimport { initialInvoice, initialProductLine } from '../data/initialData'\nimport EditableInput from './EditableInput'\n//import EditableSelect from './EditableSelect'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\nimport EditableFileImage from './EditableFileImage'\n//import countryList from '../data/countryList'\nimport Document from './Document'\nimport Page from './Page'\nimport View from './View'\nimport Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\nimport AddUIButton from \"./AddUIButton\"\nimport getConfirmation  from './ResetInvoice'\n\nFont.register({\n  family: 'Nunito',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n  ],\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n  onChange?: (invoice: Invoice) => void\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode, onChange }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n\n  const dateFormat = 'MMM dd, yyyy'\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\n  }\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice }\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value\n      }\n\n      setInvoice(newInvoice)\n    }\n  }\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'description') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseFloat(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = parseFloat(quantity)\n    const rateNumber = parseFloat(rate)\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n    return amount.toFixed(2)\n  }\n\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = parseFloat(productLine.quantity)\n      const rateNumber = parseFloat(productLine.rate)\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/)\n    const taxRate = match ? parseFloat(match[1]) : 0\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\n\n    setSaleTax(saleTax)\n  }, [subTotal, invoice.taxLabel])\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(invoice)\n    }\n  }, [onChange, invoice])\n\n\n  return (\n    <>\n    <AddUIButton \n      buttonClass={\"button-reset-invoice\"} \n      buttonName=\"Reset Invoice\"\n      hoverTitle={\"Reset to Default\"}\n      onButtonClick={getConfirmation}></AddUIButton>\n    <AddUIButton \n      buttonClass={\"button-save-invoice\"} \n      buttonName=\"Save Invoice\"\n      hoverTitle={\"Save Invoice (Does not work)\"}\n      onButtonClick=\"\"></AddUIButton>\n\n\n    <Document pdfMode={pdfMode}>\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n        {!pdfMode && <Download data={invoice} />}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableFileImage\n              className=\"logo\"\n              placeholder=\"Your Logo\"\n              value={invoice.logo}\n              width={invoice.logoWidth}\n              pdfMode={pdfMode}\n              onChangeImage={(value) => handleChange('logo', value)}\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\n            />\n            <EditableInput\n              className=\"fs-20 bold\"\n              placeholder=\"Your Company\"\n              value={invoice.companyName}\n              onChange={(value) => handleChange('companyName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Your Name\"\n              value={invoice.name}\n              onChange={(value) => handleChange('name', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Company's Address\"\n              value={invoice.companyAddress}\n              onChange={(value) => handleChange('companyAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.companyAddress2}\n              onChange={(value) => handleChange('companyAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Country\"\n              value={invoice.companyCountry}\n              onChange={(value) => handleChange('companyCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-45 right bold\"\n              placeholder=\"Invoice\"\n              value={invoice.title}\n              onChange={(value) => handleChange('title', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\n          <View className=\"w-55\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"bold dark mb-5\"\n              value={invoice.billTo}\n              onChange={(value) => handleChange('billTo', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Your Client's Name\"\n              value={invoice.clientName}\n              onChange={(value) => handleChange('clientName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Client's Address\"\n              value={invoice.clientAddress}\n              onChange={(value) => handleChange('clientAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.clientAddress2}\n              onChange={(value) => handleChange('clientAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Country\"\n              value={invoice.companyCountry}\n              onChange={(value) => handleChange('clientCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-45\" pdfMode={pdfMode}>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceTitleLabel}\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder=\"INV-12\"\n                  value={invoice.invoiceTitle}\n                  onChange={(value) => handleChange('invoiceTitle', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDateLabel}\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDate, dateFormat)}\n                  selected={invoiceDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDueDateLabel}\n                  onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDueDate, dateFormat)}\n                  selected={invoiceDueDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDueDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold\"\n              value={invoice.productLineDescription}\n              onChange={(value) => handleChange('productLineDescription', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantity}\n              onChange={(value) => handleChange('productLineQuantity', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityRate}\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityAmount}\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        {invoice.productLines.map((productLine, i) => {\n          return pdfMode && productLine.description === '' ? (\n            <Text key={i}></Text>\n          ) : (\n            <View key={i} className=\"row flex\" pdfMode={pdfMode}>\n              <View className=\"w-48 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark\"\n                  rows={2}\n                  placeholder=\"Enter item name/description\"\n                  value={productLine.description}\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.quantity}\n                  onChange={(value) => handleProductLineChange(i, 'quantity', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.rate}\n                  onChange={(value) => handleProductLineChange(i, 'rate', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <Text className=\"dark right\" pdfMode={pdfMode}>\n                  {calculateAmount(productLine.quantity, productLine.rate)}\n                </Text>\n              </View>\n              {!pdfMode && (\n                <button\n                  className=\"link row__remove\"\n                  aria-label=\"Remove Row\"\n                  title=\"Remove Row\"\n                  onClick={() => handleRemove(i)}\n                >\n                  <span className=\"icon icon-remove bg-red\"></span>\n                </button>\n              )}\n            </View>\n          )\n        })}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n            {!pdfMode && (\n              <button className=\"link\" onClick={handleAdd}>\n                <span className=\"icon icon-add bg-green mr-10\"></span>\n                Add Line Item\n              </button>\n            )}\n          </View>\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.subTotalLabel}\n                  onChange={(value) => handleChange('subTotalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {subTotal?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.taxLabel}\n                  onChange={(value) => handleChange('taxLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {saleTax?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.totalLabel}\n                  onChange={(value) => handleChange('totalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark bold right ml-30\"\n                  value={invoice.currency}\n                  onChange={(value) => handleChange('currency', value)}\n                  pdfMode={pdfMode}\n                />\n                <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\n                  {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\n                    ? subTotal + saleTax\n                    : 0\n                  ).toFixed(2)}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={invoice.notesLabel}\n            onChange={(value) => handleChange('notesLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.notes}\n            onChange={(value) => handleChange('notes', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={invoice.termLabel}\n            onChange={(value) => handleChange('termLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.term}\n            onChange={(value) => handleChange('term', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n      </Page>\n    </Document>\n    </>\n  )\n}\n\nexport default InvoicePage\n","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyArPMHCJJ2oNvVjzHa2SdeTSHN_S0VBr5M\",\r\n    authDomain: \"invoice-martinreinok-com.firebaseapp.com\",\r\n    projectId: \"invoice-martinreinok-com\",\r\n    storageBucket: \"invoice-martinreinok-com.appspot.com\",\r\n    messagingSenderId: \"892402904173\",\r\n    appId: \"1:892402904173:web:b7938cd64fd79f78f5a364\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app)\r\nexport default app\r\n","import React, {useContext, useState, useEffect} from \"react\";\r\nimport { auth } from \"../data/firebase\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n\r\n    const value = {\r\n        currentUser, \r\n        login\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport '../scss/_login.scss';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function LogIn() {\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [ loading ] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const navigate = useNavigate();\r\n\r\nasync function handleSubmit(e) {\r\n    e.preventDefault()\r\n    try {\r\n        await login(usernameRef.current.value, passwordRef.current.value)\r\n        setError(\"Success\")\r\n        navigate(\"/invoice\")\r\n    } catch{\r\n        setError(\"Log in failed\")\r\n    }\r\n      \r\n}\r\n    \r\n\r\n  return (\r\n    <div className=\"login-box\">\r\n        <h2>Login</h2>\r\n        <center><h3>{error}</h3></center>\r\n        <form>\r\n            <div className=\"user-box\">\r\n                <input type=\"username\" placeholder='Username' required={true} ref={usernameRef}/>\r\n            </div>\r\n            <div className=\"user-box\">\r\n                <input type=\"password\" placeholder='Password' required={true} ref={passwordRef}/>\r\n            </div>\r\n            <button className='submit-button' disabled={loading} onClick={handleSubmit}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { currentUser } = useAuth();\r\n    return currentUser ? children : <Navigate to=\"/login\" />;\r\n        \r\n}\r\nexport default PrivateRoute;","import React from 'react'\r\nimport InvoicePage from './components/InvoicePage'\r\nimport { Invoice } from './data/types'\r\nimport { AuthProvider } from './contexts/AuthContext'\r\nimport Login from './components/Login'\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\n\r\nfunction App() {\r\n\r\n  const savedInvoice = window.localStorage.getItem('invoiceData')\r\n  let data = null\r\n\r\n  try {\r\n    if (savedInvoice) {\r\n      data = JSON.parse(savedInvoice)\r\n    }\r\n  } catch (_e) { }\r\n\r\n  const onInvoiceUpdated = (invoice: Invoice) => {\r\n    window.localStorage.setItem('invoiceData', JSON.stringify(invoice))\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n    <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n            <Route \r\n            path='/invoice' \r\n            element={\r\n            <PrivateRoute>\r\n                <InvoicePage data={data} onChange={onInvoiceUpdated} />\r\n            </PrivateRoute>}>\r\n            </Route>\r\n            <Route path=\"/login\" element={ <Login /> }></Route>\r\n            <Route path=\"/\" element={ <Login /> }></Route>\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n    </div>\r\n    // <InvoicePage data={data} onChange={onInvoiceUpdated} />\r\n    // <h3 className=\"center fs-10\">Code and design by: <a href=\"https://github.com/tuanpham-dev\" target=\"_blank\">tuanpham-dev (GitHub)</a>, slightly modded by <a href=\"https://github.com/martinreinok\" target=\"_blank\">me</a> </h3>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './scss/main.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}
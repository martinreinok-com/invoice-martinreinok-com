{"version":3,"sources":["data/initialData.ts","styles/styles.ts","styles/compose.ts","components/EditableInput.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","hooks/useOnClickOutside.ts","components/EditableFileImage.tsx","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/DownloadPDF.tsx","components/AddUIButton.js","components/ResetInvoice.js","components/InvoicePage.tsx","components/DownloadTemplate.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialProductLine","description","quantity","rate","initialInvoice","logo","logoWidth","title","companyName","name","companyAddress","companyAddress2","companyCountry","billTo","clientName","clientAddress","clientAddress2","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","productLines","subTotalLabel","taxLabel","totalLabel","currency","notesLabel","notes","term","termLabel","bank1","bank1IBAN","bank1SWIFT","bank2","bank2IBAN","bank2SWIFT","bank3","bank3IBAN","bank3SWIFT","firmaLisainfo","styles","dark","color","white","backgroundColor","flex","display","flexDirection","flexWrap","position","bottom","left","right","marginLeft","marginRight","paddingRight","width","row","borderBottom","borderTop","marginTop","marginBottom","padding","paddingBottom","textAlign","center","bold","fontWeight","fontSize","page","fontFamily","paddingTop","paddingLeft","span","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","placeholder","value","onChange","pdfMode","style","type","e","target","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","EditableFileImage","onChangeImage","onChangeWidth","fileInput","useRef","widthWrapper","useState","isEditing","setIsEditing","handleUpload","click","maxWidth","src","alt","onClick","min","max","marks","100","150","200","250","included","step","defaultValue","tabIndex","accept","files","length","reader","FileReader","result","readAsDataURL","Document","children","Page","size","View","Text","Download","data","show","setShow","timeout","setTimeout","clearTimeout","fileName","toLowerCase","aria-label","AddUIButton","buttonClass","buttonName","hoverTitle","onButtonClick","console","log","ResetInvoice","window","localStorage","removeItem","location","reload","downloadInvoiceData","currentInvoice","filename","jsonData","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","revokeObjectURL","error","downloadDataAsJson","Font","register","family","fonts","InvoicePage","invoice","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","inputFile","Date","valueOf","setDate","getDate","handleChange","newInvoice","handleProductLineChange","index","map","productLine","i","newProductLine","includes","n","parseFloat","toString","quantityNumber","rateNumber","match","taxRate","confirm","id","selectedFile","onload","fileContents","parsedData","parse","readAsText","format","Array","isArray","key","toFixed","calculateAmount","filter","handleRemove","App","savedInvoice","getItem","_e","setItem","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ecb41a7a.chunk.js","sourcesContent":["import { ProductLine, Invoice } from './types'\n\nexport const initialProductLine: ProductLine = {\n  description: '',\n  quantity: '1',\n  rate: '0.00',\n}\n\nexport const initialInvoice: Invoice = {\n  logo: '',\n  logoWidth: 100,\n  title: 'Arve',\n  companyName: '',\n  name: '',\n  companyAddress: '',\n  companyAddress2: '',\n  companyCountry: '',\n  billTo: 'Arve saaja',\n  clientName: '',\n  clientAddress: '',\n  clientAddress2: '',\n  clientCountry: '',\n  invoiceTitleLabel: 'Arve nr',\n  invoiceTitle: '',\n  invoiceDateLabel: 'Arve kuupäev',\n  invoiceDate: '',\n  invoiceDueDateLabel: 'Maksetähtaeg',\n  invoiceDueDate: '',\n  productLineDescription: 'Toode/Teenus',\n  productLineQuantity: 'Kogus',\n  productLineQuantityRate: 'Summa',\n  productLineQuantityAmount: 'Kokku',\n  productLines: [\n    {\n      description: 'Toode/Teenus',\n      quantity: '1',\n      rate: '100.00',\n    },\n  ],\n  subTotalLabel: 'Summa KM-ta 20%',\n  taxLabel: 'KM (20%)',\n  totalLabel: 'Arve kokku',\n  currency: '€',\n  notesLabel: '',\n  notes: '',\n  term: \"\",\n  termLabel: \"\",\n  bank1: \"\",\n  bank1IBAN: \"\",\n  bank1SWIFT: \"\",\n  bank2: \"\",\n  bank2IBAN: \"\",\n  bank2SWIFT: \"\",\n  bank3: \"\",\n  bank3IBAN: \"\",\n  bank3SWIFT: \"\",\n  firmaLisainfo: \"\",\n}\n","import { CSSClasses } from '../data/types'\n\nconst colorDark = '#222'\nconst colorDark2 = '#666'\nconst colorGray = '#e3e3e3'\nconst colorWhite = '#fff'\n\nconst styles: CSSClasses = {\n  dark: {\n    color: colorDark,\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  \"flex-container\": {\n    display: 'flex-container',\n    flexDirection: 'row',\n  },\n\n  \"invoice-footer\": {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    right: \"0px\",\n    marginLeft: \"0px\",\n    marginRight: \"0px\",\n    backgroundColor: colorGray,\n  },\n\n  'ml-35': {\n    marginLeft: '35px',\n  },\n\n  'mr-35': {\n    marginRight: '35px',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-90': {\n    width: '90%',\n  },\n\n  'w-80': {\n    width: '80%',\n  },\n\n  'w-70': {\n    width: '70%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-35': {\n    width: '35%',\n  },\n\n  'w-30': {\n    width: '30%',\n  },\n\n  'w-25': {\n    width: '25%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '18%',\n  },\n\n  'w-20': {\n    width: '20%',\n  },\n\n  'w-15': {\n    width: '15%',\n  },\n\n  row: {\n    borderBottom: `1px solid ${colorGray}`,\n  },\n\n  \"divider\": {\n    borderTop: `2px solid ${colorGray}`,\n  },\n\n  'mt-60': {\n    marginTop: '60px',\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-18': {\n    marginTop: '18px',\n  },\n\n  'mt-15': {\n    marginTop: '15px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mt-5': {\n    marginTop: '5px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'mb-10': {\n    marginBottom: '10px',\n  },\n\n  'p-4-8': {\n    padding: '4px 8px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  center: {\n    textAlign: 'center',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'fs-10': {\n    fontSize: '10px',\n  },\n\n  'fs-15': {\n    fontSize: '15px',\n  },\n\n  'fs-20': {\n    fontSize: '20px',\n  },\n\n  'fs-45': {\n    fontSize: '45px',\n  },\n\n  page: {\n    fontFamily: 'Nunito',\n    fontSize: '13px',\n    color: '#555',\n    paddingTop: \"40px\",\n    paddingLeft: \"35px\",\n    paddingRight: \"35px\",\n    paddingBottom: \"30px\"\n  },\n\n  span: {\n    padding: '4px 12px 4px 0',\n  },\n\n  logo: {\n    display: 'block',\n  }\n}\n\nexport default styles\n","import ReactPDF from '@react-pdf/renderer'\nimport styles from './styles'\n\nconst compose = (classes: string): ReactPDF.Styles => {\n  const css: ReactPDF.Styles = {}\n\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\n\n  classesArray.forEach((className) => {\n    if (typeof styles[className] !== undefined) {\n      Object.assign(css, styles[className])\n    }\n  })\n\n  return css\n}\n\nexport default compose\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <input\n          type=\"text\"\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableInput\n","import React, { FC } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { Text } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n  rows?: number\n}\n\nconst EditableTextarea: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  rows,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <TextareaAutosize\n          minRows={rows || 1}\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableTextarea\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  value?: string\n  selected?: Date\n  onChange?: (date: Date | [Date, Date] | null) => void\n  pdfMode?: boolean\n}\n\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableCalendarInput\n","import { RefObject, useEffect } from 'react'\n\ntype AnyEvent = MouseEvent | TouchEvent\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: AnyEvent) => void,\n) {\n  useEffect(() => {\n    const listener = (event: AnyEvent) => {\n      const el = ref?.current\n\n      // Do nothing if clicking ref's element or descendent elements\n      if (!el || el.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(`mousedown`, listener)\n    document.addEventListener(`touchstart`, listener)\n\n    return () => {\n      document.removeEventListener(`mousedown`, listener)\n      document.removeEventListener(`touchstart`, listener)\n    }\n\n    // Reload only if ref or handler changes\n  }, [ref, handler])\n}\n\nexport default useOnClickOutside\n","import React, { FC, useRef, useState } from 'react'\nimport Slider from 'rc-slider'\nimport { Image } from '@react-pdf/renderer'\nimport useOnClickOutside from '../hooks/useOnClickOutside'\nimport compose from '../styles/compose'\nimport 'rc-slider/assets/index.css'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  width?: number\n  onChangeImage?: (value: string) => void\n  onChangeWidth?: (value: number) => void\n  pdfMode?: boolean\n}\n\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\n  const fileInput = useRef<HTMLInputElement>(null)\n  const widthWrapper = useRef<HTMLDivElement>(null)\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const marks = {\n    100: '100px',\n    150: '150px',\n    200: '200px',\n    250: '250px'\n  }\n\n  const handleClickOutside = () => {\n    if (isEditing) {\n      setIsEditing(false)\n    }\n  }\n\n  useOnClickOutside(widthWrapper, handleClickOutside)\n\n  const handleUpload = () => {\n    fileInput?.current?.click()\n  }\n\n  const handleChangeImage = () => {\n    if (fileInput?.current?.files) {\n      const files = fileInput.current.files\n\n      if (files.length > 0 && typeof onChangeImage === 'function') {\n        const reader = new FileReader()\n\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            onChangeImage(reader.result)\n          }\n        })\n\n        reader.readAsDataURL(files[0])\n      }\n    }\n  }\n\n  const handleChangeWidth = (value: number) => {\n    if (typeof onChangeWidth === 'function') {\n      onChangeWidth(value)\n    }\n  }\n\n  const handleEdit = () => {\n    setIsEditing(!isEditing)\n  }\n\n  const clearImage = () => {\n    if (typeof onChangeImage === 'function') {\n      onChangeImage('')\n    }\n  }\n\n  if (pdfMode) {\n    if (value) {\n      return (\n        <Image\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\n          src={value}\n        />\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\n      {!value ? (\n        <button\n          type=\"button\"\n          className=\"image__upload\"\n          onClick={handleUpload}\n        >\n          {placeholder}\n        </button>\n      ) : (\n        <>\n          <img\n            src={value}\n            className=\"image__img\"\n            alt={placeholder}\n            style={{ maxWidth: width || 100}}\n          />\n\n          <button\n            type=\"button\"\n            className=\"image__change\"\n            onClick={handleUpload}\n          >\n            Change Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__edit\"\n            onClick={handleEdit}\n          >\n            Resize Image\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"image__remove\"\n            onClick={clearImage}\n          >\n            Remove\n          </button>\n\n          {isEditing && (\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\n            </div>\n          )}\n        </>\n      )}\n\n      <input\n        ref={fileInput}\n        tabIndex={-1}\n        type=\"file\"\n        accept=\"image/*\"\n        className=\"image__file\"\n        onChange={handleChangeImage}\n      />\n    </div>\n  )\n}\n\nexport default EditableFileImage\n","import React, { FC } from 'react'\nimport { Document as PdfDocument } from '@react-pdf/renderer'\n\ninterface Props {\n  pdfMode?: boolean\n}\n\nconst Document: FC<Props> = ({ pdfMode, children }) => {\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\n}\n\nexport default Document\n","import React, { FC } from 'react'\nimport { Page as PdfPage } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\n          {children}\n        </PdfPage>\n      ) : (\n        <div className={'page ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default Page\n","import React, { FC } from 'react'\nimport { View as PdfView } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\n      ) : (\n        <div className={'view ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default View\n","import React, { FC } from 'react'\nimport { Text as PdfText } from '@react-pdf/renderer'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n  children?: string\n}\n\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\n      ) : (\n        <span className={'span ' + (className ? className : '')}>{children}</span>\n      )}\n    </>\n  )\n}\n\nexport default Text\n","import React, { FC, useEffect, useState } from 'react'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Invoice } from '../data/types'\nimport InvoicePage from './InvoicePage'\n\ninterface Props {\n  data: Invoice\n}\n\nconst Download: FC<Props> = ({ data }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  useEffect(() => {\n    setShow(false)\n\n    const timeout = setTimeout(() => {\n      setShow(true)\n    }, 500)\n\n    return () => clearTimeout(timeout)\n  }, [data])\n\n  return (\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Download PDF\">\n      {show && (\n        <PDFDownloadLink\n          document={<InvoicePage pdfMode={true} data={data} />}\n          fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\n          aria-label=\"Download PDF\"\n        ></PDFDownloadLink>\n      )}\n    </div>\n  )\n}\n\nexport default Download\n","import React from 'react'\n\n\nconst AddUIButton = ({buttonClass, buttonName, hoverTitle, onButtonClick }) => {\n\n    function buttonClick() {\n        console.log('Button click :)');\n        if (typeof onButtonClick === 'function') {\n            onButtonClick()\n        } else {console.log(\"onButtonClick is not a function\")}\n        \n    }\n\n  return (\n    <button  \n    onClick={buttonClick}\n    className={buttonClass} \n    title={hoverTitle}>\n        <span>{buttonName}</span>\n    </button>\n  )\n}\n\nexport default AddUIButton\n","function deleteLocalStorage(){\n    window.localStorage.removeItem(\"invoiceData\")\n}\n\nfunction ResetInvoice() {\n  deleteLocalStorage()\n  window.location.reload();\n  \n}\n\nexport default function getConfirmation(){\n  var returnVal = window.confirm(\"This will reset the form, press OK to confirm.\");\n  if ( returnVal === true ){\n      ResetInvoice();\n   }\n}\n","import React, { FC, useState, useEffect, useRef } from 'react'\nimport { Invoice, ProductLine } from '../data/types'\nimport { initialInvoice, initialProductLine } from '../data/initialData'\nimport EditableInput from './EditableInput'\n//import EditableSelect from './EditableSelect'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\nimport EditableFileImage from './EditableFileImage'\nimport Document from './Document'\nimport Page from './Page'\nimport View from './View'\nimport Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\nimport AddUIButton from \"./AddUIButton\"\nimport getConfirmation  from './ResetInvoice'\nimport downloadDataAsJson  from './DownloadTemplate'\n\nFont.register({\n  family: 'Nunito',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n  ],\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n  onChange?: (invoice: Invoice) => void\n}\n\nfunction downloadInvoiceData(currentInvoice: Invoice) {\n  downloadDataAsJson(currentInvoice, currentInvoice.title);\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode, onChange }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n  const inputFile = useRef<HTMLInputElement | null>(null);\n\n  const dateFormat = 'MMM dd, yyyy'\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 14)\n  }\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice }\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value\n      }\n\n      setInvoice(newInvoice)\n    }\n  }\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'description') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseFloat(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = parseFloat(quantity)\n    const rateNumber = parseFloat(rate)\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n    return amount.toFixed(2)\n  }\n\n  const uploadInvoiceData = () => {\n    // `current` points to the mounted file input element\n    inputFile.current?.click();\n    };\n  \n    const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const selectedFile = e.target.files?.[0]; // Use optional chaining to handle null\n    \n      if (selectedFile) {\n        // Rest of the code remains the same\n        const reader = new FileReader();\n    \n        // Define a callback function to handle the file reading\n        reader.onload = (event) => {\n          if (event.target) {\n            const fileContents = event.target.result; // This is the file content\n            try {\n              const parsedData : Invoice = JSON.parse(fileContents as string);\n              console.log('Parsed Data:', parsedData);\n              setInvoice(parsedData);\n            } catch (error) {\n              console.error('Error parsing file:', error);\n            }\n          }\n        };\n    \n        // Read the file as text or any other appropriate method\n        reader.readAsText(selectedFile);\n      }\n    };\n\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = parseFloat(productLine.quantity)\n      const rateNumber = parseFloat(productLine.rate)\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/)\n    const taxRate = match ? parseFloat(match[1]) : 0\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\n\n    setSaleTax(saleTax)\n  }, [subTotal, invoice.taxLabel])\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(invoice)\n    }\n  }, [onChange, invoice])\n\n\n  return (\n    <>\n    <AddUIButton \n      buttonClass={\"button-reset-invoice\"} \n      buttonName=\"Reset Invoice\"\n      hoverTitle={\"Reset to Default\"}\n      onButtonClick={() => getConfirmation()}></AddUIButton>\n    <AddUIButton \n      buttonClass={\"button-save-invoice\"} \n      buttonName=\"Save Invoice\"\n      hoverTitle={\"Save Invoice to file\"}\n      onButtonClick={() => downloadInvoiceData(invoice)}></AddUIButton>\n    <input type='file' id='file' accept='.json' ref={inputFile} onChange={handleFileInputChange} style={{display: 'none'}}/>\n    <AddUIButton \n      buttonClass={\"button-load-invoice\"} \n      buttonName=\"Load Invoice\"\n      hoverTitle={\"Load invoice from file\"}\n      onButtonClick={uploadInvoiceData}></AddUIButton>\n\n    <Document pdfMode={pdfMode}>\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n        {!pdfMode && <Download data={invoice} />}\n        \n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableFileImage\n              className=\"logo\"\n              placeholder=\"Firma logo\"\n              value={invoice.logo}\n              width={invoice.logoWidth}\n              pdfMode={pdfMode}\n              onChangeImage={(value) => handleChange('logo', value)}\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\n            />\n            <EditableInput\n              className=\"fs-20 bold\"\n              placeholder=\"Firma nimi\"\n              value={invoice.companyName}\n              onChange={(value) => handleChange('companyName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Aadress, ZIP Maakond Linn\"\n              value={invoice.name}\n              onChange={(value) => handleChange('name', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Registrikood\"\n              value={invoice.companyAddress}\n              onChange={(value) => handleChange('companyAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"VAT\"\n              value={invoice.companyAddress2}\n              onChange={(value) => handleChange('companyAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Lisainfo (vajdusel)\"\n              value={invoice.companyCountry}\n              onChange={(value) => handleChange('companyCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-45 right bold\"\n              placeholder=\"Arve\"\n              value={invoice.title}\n              onChange={(value) => handleChange('title', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\n          <View className=\"w-60\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"bold dark mb-5\"\n              value={invoice.billTo}\n              onChange={(value) => handleChange('billTo', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Kliendi nimi\"\n              value={invoice.clientName}\n              onChange={(value) => handleChange('clientName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Aadress\"\n              value={invoice.clientAddress}\n              onChange={(value) => handleChange('clientAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"ZIP Maakond Vald\"\n              value={invoice.clientAddress2}\n              onChange={(value) => handleChange('clientAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Registrikood\"\n              value={invoice.clientCountry}\n              onChange={(value) => handleChange('clientCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-40\" pdfMode={pdfMode}>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceTitleLabel}\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder=\"Arve number\"\n                  value={invoice.invoiceTitle}\n                  onChange={(value) => handleChange('invoiceTitle', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDateLabel}\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDate, dateFormat)}\n                  selected={invoiceDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDueDateLabel}\n                  onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDueDate, dateFormat)}\n                  selected={invoiceDueDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDueDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold\"\n              value={invoice.productLineDescription}\n              onChange={(value) => handleChange('productLineDescription', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantity}\n              onChange={(value) => handleChange('productLineQuantity', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityRate}\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityAmount}\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        {invoice.productLines.map((productLine, i) => {\n          return pdfMode && productLine.description === '' ? (\n            <Text key={i}></Text>\n          ) : (\n            <View key={i} className=\"row flex\" pdfMode={pdfMode}>\n              <View className=\"w-48 p-4-8 pb-0\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark\"\n                  rows={2}\n                  placeholder=\"Toote/Teenuse nimi/kirjeldus\"\n                  value={productLine.description}\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-0\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.quantity}\n                  onChange={(value) => handleProductLineChange(i, 'quantity', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-0\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.rate}\n                  onChange={(value) => handleProductLineChange(i, 'rate', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-18 p-4-8 pb-0\" pdfMode={pdfMode}>\n                <Text className=\"dark right\" pdfMode={pdfMode}>\n                  {calculateAmount(productLine.quantity, productLine.rate)}\n                </Text>\n              </View>\n              {!pdfMode && (\n                <button\n                  className=\"link row__remove\"\n                  aria-label=\"Remove Row\"\n                  title=\"Remove Row\"\n                  onClick={() => handleRemove(i)}\n                >\n                  <span className=\"icon icon-remove bg-red\"></span>\n                </button>\n              )}\n            </View>\n          )\n        })}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n            {!pdfMode && (\n              <button className=\"link\" onClick={handleAdd}>\n                <span className=\"icon icon-add bg-green mr-10\"></span>\n                Lisa rida\n              </button>\n            )}\n          </View>\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-60 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder='Summa KM-ta'\n                  value={invoice.subTotalLabel}\n                  onChange={(value) => handleChange('subTotalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {subTotal?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder='KM (20%)'\n                  value={invoice.taxLabel}\n                  onChange={(value) => handleChange('taxLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {saleTax?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder='Arve kokku'\n                  className=\"bold\"\n                  value={invoice.totalLabel}\n                  onChange={(value) => handleChange('totalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark bold right ml-30\"\n                  value={invoice.currency}\n                  onChange={(value) => handleChange('currency', value)}\n                  pdfMode={pdfMode}\n                />\n                <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\n                  {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\n                    ? subTotal + saleTax\n                    : 0\n                  ).toFixed(2)}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            placeholder='Lisainfo pealkiri (vajadusel)'\n            value={invoice.notesLabel}\n            onChange={(value) => handleChange('notesLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100 fake-mb-100\"\n            rows={2}\n            placeholder='Lisainfo (vajadusel)'\n            value={invoice.notes}\n            onChange={(value) => handleChange('notes', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        \n\n        <View className=\"flex-container mt-30 invoice-footer\" pdfMode={pdfMode}>\n          <View className=\"w-15 ml-35 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <EditableInput\n                      placeholder=\"Panga nimi\"\n                      value={invoice.bank1}\n                      onChange={(value) => handleChange('bank1', value)}\n                      pdfMode={pdfMode}\n              />\n            </View>\n            <EditableInput\n                    placeholder=\"Panga nimi\"\n                    value={invoice.bank2}\n                    onChange={(value) => handleChange('bank2', value)}\n                    pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-30 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <EditableInput\n                placeholder=\"IBAN\"\n                value={invoice.bank1IBAN}\n                onChange={(value) => handleChange('bank1IBAN', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          <EditableInput\n              placeholder=\"IBAN\"\n              value={invoice.bank2IBAN}\n              onChange={(value) => handleChange('bank2IBAN', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-15 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <EditableInput\n                placeholder=\"(SWIFT)\"\n                value={invoice.bank1SWIFT}\n                onChange={(value) => handleChange('bank1SWIFT', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n            <EditableInput\n                placeholder=\"(SWIFT)\"\n                value={invoice.bank2SWIFT}\n                onChange={(value) => handleChange('bank2SWIFT', value)}\n                pdfMode={pdfMode}\n              />\n          </View>\n          <View className=\"w-30  mr-35 mt-5\" pdfMode={pdfMode}>\n            <EditableTextarea\n              className=\"w-100 center mb-10\"\n              rows={4}\n              placeholder=\"Firma lisainfo, kontakt, epost, tel, www (õigeks formaadiks 4 rida teksti või vastavalt tühikuid)\"\n              value={invoice.firmaLisainfo}\n              onChange={(value) => handleChange('firmaLisainfo', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n        \n      </Page>\n    </Document>\n    </>\n  )\n}\n\nexport default InvoicePage\n","export default function downloadDataAsJson(data, filename) {\n    try {\n      // Convert the data object to a JSON string\n      const jsonData = JSON.stringify(data);\n  \n      // Create a Blob containing the JSON data\n      const blob = new Blob([jsonData], { type: 'application/json' });\n  \n      // Create a URL for the Blob\n      const url = URL.createObjectURL(blob);\n  \n      // Create a link element to trigger the download\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n  \n      // Trigger a click event on the link element to start the download\n      a.click();\n  \n      // Clean up by revoking the Blob URL\n      URL.revokeObjectURL(url);\n  \n      // Return true to indicate success\n      return true;\n    } catch (error) {\n      // Handle any errors that might occur during the download\n      console.error('Error downloading data:', error);\n      return false;\n    }\n}\n","import React from 'react'\nimport InvoicePage from './components/InvoicePage'\nimport { Invoice } from './data/types'\n\nfunction App() {\n  const savedInvoice = window.localStorage.getItem('invoiceData')\n  let data = null\n\n  try {\n    if (savedInvoice) {\n      data = JSON.parse(savedInvoice)\n    }\n  } catch (_e) { }\n\n  const onInvoiceUpdated = (invoice: Invoice) => {\n    window.localStorage.setItem('invoiceData', JSON.stringify(invoice))\n  }\n\n  return (\n    <div className=\"app\">\n      <InvoicePage data={data} onChange={onInvoiceUpdated} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './scss/main.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}
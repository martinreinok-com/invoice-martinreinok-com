{"version":3,"sources":["data/initialData.ts","styles/styles.ts","styles/compose.ts","components/EditableInput.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","hooks/useOnClickOutside.ts","components/EditableFileImage.tsx","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/DownloadPDF.tsx","components/AddUIButton.js","components/ResetInvoice.js","components/InvoicePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialProductLine","description","quantity","rate","initialInvoice","logo","logoWidth","title","companyName","name","companyAddress","companyAddress2","companyCountry","billTo","clientName","clientAddress","clientAddress2","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","productLines","subTotalLabel","taxLabel","totalLabel","currency","notesLabel","notes","term","termLabel","bank1","bank1IBAN","bank1SWIFT","bank2","bank2IBAN","bank2SWIFT","bank3","bank3IBAN","bank3SWIFT","firmaLisainfo","styles","dark","color","white","backgroundColor","flex","display","flexDirection","flexWrap","position","bottom","left","right","marginLeft","marginRight","paddingRight","width","row","borderBottom","borderTop","marginTop","marginBottom","padding","paddingBottom","textAlign","center","bold","fontWeight","fontSize","page","fontFamily","paddingTop","paddingLeft","span","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","placeholder","value","onChange","pdfMode","style","type","e","target","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","EditableFileImage","onChangeImage","onChangeWidth","fileInput","useRef","widthWrapper","useState","isEditing","setIsEditing","handleUpload","click","maxWidth","src","alt","onClick","min","max","marks","100","150","200","250","included","step","defaultValue","tabIndex","accept","files","length","reader","FileReader","result","readAsDataURL","Document","children","Page","size","View","Text","Download","data","show","setShow","timeout","setTimeout","clearTimeout","fileName","toLowerCase","aria-label","AddUIButton","buttonClass","buttonName","hoverTitle","onButtonClick","console","log","ResetInvoice","window","localStorage","removeItem","location","reload","getConfirmation","confirm","Font","register","family","fonts","InvoicePage","invoice","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","Date","valueOf","setDate","getDate","handleChange","newInvoice","handleProductLineChange","index","map","productLine","i","newProductLine","includes","n","parseFloat","toString","quantityNumber","rateNumber","match","taxRate","format","Array","isArray","key","toFixed","calculateAmount","filter","handleRemove","App","savedInvoice","getItem","JSON","parse","_e","setItem","stringify","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68eb97f6.chunk.js","sourcesContent":["import { ProductLine, Invoice } from './types'\r\n\r\nexport const initialProductLine: ProductLine = {\r\n  description: '',\r\n  quantity: '1',\r\n  rate: '0.00',\r\n}\r\n\r\nexport const initialInvoice: Invoice = {\r\n  logo: '',\r\n  logoWidth: 100,\r\n  title: 'Arve',\r\n  companyName: '',\r\n  name: '',\r\n  companyAddress: '',\r\n  companyAddress2: '',\r\n  companyCountry: '',\r\n  billTo: 'Arve saaja',\r\n  clientName: '',\r\n  clientAddress: '',\r\n  clientAddress2: '',\r\n  clientCountry: '',\r\n  invoiceTitleLabel: 'Arve nr',\r\n  invoiceTitle: '',\r\n  invoiceDateLabel: 'Arve kuupäev',\r\n  invoiceDate: '',\r\n  invoiceDueDateLabel: 'Maksetähtaeg',\r\n  invoiceDueDate: '',\r\n  productLineDescription: 'Toode/Teenus',\r\n  productLineQuantity: 'Kogus',\r\n  productLineQuantityRate: 'Summa',\r\n  productLineQuantityAmount: 'Kokku',\r\n  productLines: [\r\n    {\r\n      description: 'Toode/Teenus',\r\n      quantity: '2',\r\n      rate: '100.00',\r\n    },\r\n  ],\r\n  subTotalLabel: 'Summa KM-ta 20%',\r\n  taxLabel: 'KM (20%)',\r\n  totalLabel: 'TOTAL',\r\n  currency: '€',\r\n  notesLabel: '',\r\n  notes: '',\r\n  term: \"\",\r\n  termLabel: \"\",\r\n  bank1: \"\",\r\n  bank1IBAN: \"\",\r\n  bank1SWIFT: \"\",\r\n  bank2: \"\",\r\n  bank2IBAN: \"\",\r\n  bank2SWIFT: \"\",\r\n  bank3: \"\",\r\n  bank3IBAN: \"\",\r\n  bank3SWIFT: \"\",\r\n  firmaLisainfo: \"\",\r\n}\r\n","import { CSSClasses } from '../data/types'\r\n\r\nconst colorDark = '#222'\r\nconst colorDark2 = '#666'\r\nconst colorGray = '#e3e3e3'\r\nconst colorWhite = '#fff'\r\n\r\nconst styles: CSSClasses = {\r\n  dark: {\r\n    color: colorDark,\r\n  },\r\n\r\n  white: {\r\n    color: colorWhite,\r\n  },\r\n\r\n  'bg-dark': {\r\n    backgroundColor: colorDark2,\r\n  },\r\n\r\n  'bg-gray': {\r\n    backgroundColor: colorGray,\r\n  },\r\n\r\n  flex: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n  },\r\n\r\n  \"flex-container\": {\r\n    display: 'flex-container',\r\n    flexDirection: 'row',\r\n  },\r\n\r\n  \"invoice-footer\": {\r\n    position: \"absolute\",\r\n    bottom: \"0px\",\r\n    left: \"0px\",\r\n    right: \"0px\",\r\n    marginLeft: \"0px\",\r\n    marginRight: \"0px\",\r\n    backgroundColor: colorGray,\r\n  },\r\n\r\n  'ml-35': {\r\n    marginLeft: '35px',\r\n  },\r\n\r\n  'mr-35': {\r\n    marginRight: '35px',\r\n  },\r\n\r\n  'w-auto': {\r\n    flex: 1,\r\n    paddingRight: '8px',\r\n  },\r\n\r\n  'ml-30': {\r\n    flex: 1,\r\n  },\r\n\r\n  'w-100': {\r\n    width: '100%',\r\n  },\r\n\r\n  'w-90': {\r\n    width: '90%',\r\n  },\r\n\r\n  'w-80': {\r\n    width: '80%',\r\n  },\r\n\r\n  'w-70': {\r\n    width: '70%',\r\n  },\r\n\r\n  'w-60': {\r\n    width: '60%',\r\n  },\r\n\r\n  'w-55': {\r\n    width: '55%',\r\n  },\r\n\r\n  'w-50': {\r\n    width: '50%',\r\n  },\r\n\r\n  'w-48': {\r\n    width: '48%',\r\n  },\r\n\r\n  'w-45': {\r\n    width: '45%',\r\n  },\r\n\r\n  'w-40': {\r\n    width: '40%',\r\n  },\r\n\r\n  'w-35': {\r\n    width: '35%',\r\n  },\r\n\r\n  'w-30': {\r\n    width: '30%',\r\n  },\r\n\r\n  'w-25': {\r\n    width: '25%',\r\n  },\r\n\r\n  'w-17': {\r\n    width: '17%',\r\n  },\r\n\r\n  'w-18': {\r\n    width: '18%',\r\n  },\r\n\r\n  'w-20': {\r\n    width: '20%',\r\n  },\r\n\r\n  'w-15': {\r\n    width: '15%',\r\n  },\r\n\r\n  row: {\r\n    borderBottom: `1px solid ${colorGray}`,\r\n  },\r\n\r\n  \"divider\": {\r\n    borderTop: `2px solid ${colorGray}`,\r\n  },\r\n\r\n  'mt-60': {\r\n    marginTop: '60px',\r\n  },\r\n\r\n  'mt-40': {\r\n    marginTop: '40px',\r\n  },\r\n\r\n  'mt-30': {\r\n    marginTop: '30px',\r\n  },\r\n\r\n  'mt-20': {\r\n    marginTop: '20px',\r\n  },\r\n\r\n  'mt-18': {\r\n    marginTop: '18px',\r\n  },\r\n\r\n  'mt-15': {\r\n    marginTop: '15px',\r\n  },\r\n\r\n  'mt-10': {\r\n    marginTop: '10px',\r\n  },\r\n\r\n  'mt-5': {\r\n    marginTop: '5px',\r\n  },\r\n\r\n  'mb-5': {\r\n    marginBottom: '5px',\r\n  },\r\n\r\n  'mb-10': {\r\n    marginBottom: '10px',\r\n  },\r\n\r\n  'p-4-8': {\r\n    padding: '4px 8px',\r\n  },\r\n\r\n  'p-5': {\r\n    padding: '5px',\r\n  },\r\n\r\n  'pb-10': {\r\n    paddingBottom: '10px',\r\n  },\r\n\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  'fs-10': {\r\n    fontSize: '10px',\r\n  },\r\n\r\n  'fs-15': {\r\n    fontSize: '15px',\r\n  },\r\n\r\n  'fs-20': {\r\n    fontSize: '20px',\r\n  },\r\n\r\n  'fs-45': {\r\n    fontSize: '45px',\r\n  },\r\n\r\n  page: {\r\n    fontFamily: 'Nunito',\r\n    fontSize: '13px',\r\n    color: '#555',\r\n    paddingTop: \"40px\",\r\n    paddingLeft: \"35px\",\r\n    paddingRight: \"35px\",\r\n    paddingBottom: \"30px\"\r\n  },\r\n\r\n  span: {\r\n    padding: '4px 12px 4px 0',\r\n  },\r\n\r\n  logo: {\r\n    display: 'block',\r\n  }\r\n}\r\n\r\nexport default styles\r\n","import ReactPDF from '@react-pdf/renderer'\r\nimport styles from './styles'\r\n\r\nconst compose = (classes: string): ReactPDF.Styles => {\r\n  const css: ReactPDF.Styles = {}\r\n\r\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\r\n\r\n  classesArray.forEach((className) => {\r\n    if (typeof styles[className] !== undefined) {\r\n      Object.assign(css, styles[className])\r\n    }\r\n  })\r\n\r\n  return css\r\n}\r\n\r\nexport default compose\r\n","import React, { FC } from 'react'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  onChange?: (value: string) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <input\r\n          type=\"text\"\r\n          className={'input ' + (className ? className : '')}\r\n          placeholder={placeholder || ''}\r\n          value={value || ''}\r\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableInput\r\n","import React, { FC } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  onChange?: (value: string) => void\r\n  pdfMode?: boolean\r\n  rows?: number\r\n}\r\n\r\nconst EditableTextarea: FC<Props> = ({\r\n  className,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  pdfMode,\r\n  rows,\r\n}) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <TextareaAutosize\r\n          minRows={rows || 1}\r\n          className={'input ' + (className ? className : '')}\r\n          placeholder={placeholder || ''}\r\n          value={value || ''}\r\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableTextarea\r\n","import React, { FC } from 'react'\r\nimport { Text } from '@react-pdf/renderer'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  value?: string\r\n  selected?: Date\r\n  onChange?: (date: Date | [Date, Date] | null) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\r\n      ) : (\r\n        <DatePicker\r\n          className={'input ' + (className ? className : '')}\r\n          selected={selected}\r\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\r\n          dateFormat=\"MMM dd, yyyy\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditableCalendarInput\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import React, { FC, useRef, useState } from 'react'\r\nimport Slider from 'rc-slider'\r\nimport { Image } from '@react-pdf/renderer'\r\nimport useOnClickOutside from '../hooks/useOnClickOutside'\r\nimport compose from '../styles/compose'\r\nimport 'rc-slider/assets/index.css'\r\n\r\ninterface Props {\r\n  className?: string\r\n  placeholder?: string\r\n  value?: string\r\n  width?: number\r\n  onChangeImage?: (value: string) => void\r\n  onChangeWidth?: (value: number) => void\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst EditableFileImage: FC<Props> = ({ className, placeholder, value, width, onChangeImage, onChangeWidth, pdfMode }) => {\r\n  const fileInput = useRef<HTMLInputElement>(null)\r\n  const widthWrapper = useRef<HTMLDivElement>(null)\r\n  const [isEditing, setIsEditing] = useState<boolean>(false)\r\n  const marks = {\r\n    100: '100px',\r\n    150: '150px',\r\n    200: '200px',\r\n    250: '250px'\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    if (isEditing) {\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  useOnClickOutside(widthWrapper, handleClickOutside)\r\n\r\n  const handleUpload = () => {\r\n    fileInput?.current?.click()\r\n  }\r\n\r\n  const handleChangeImage = () => {\r\n    if (fileInput?.current?.files) {\r\n      const files = fileInput.current.files\r\n\r\n      if (files.length > 0 && typeof onChangeImage === 'function') {\r\n        const reader = new FileReader()\r\n\r\n        reader.addEventListener('load', () => {\r\n          if (typeof reader.result === 'string') {\r\n            onChangeImage(reader.result)\r\n          }\r\n        })\r\n\r\n        reader.readAsDataURL(files[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangeWidth = (value: number) => {\r\n    if (typeof onChangeWidth === 'function') {\r\n      onChangeWidth(value)\r\n    }\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(!isEditing)\r\n  }\r\n\r\n  const clearImage = () => {\r\n    if (typeof onChangeImage === 'function') {\r\n      onChangeImage('')\r\n    }\r\n  }\r\n\r\n  if (pdfMode) {\r\n    if (value) {\r\n      return (\r\n        <Image\r\n          style={{...compose(`image ${className ? className : ''}`), maxWidth: width}}\r\n          src={value}\r\n        />\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\r\n      {!value ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"image__upload\"\r\n          onClick={handleUpload}\r\n        >\r\n          {placeholder}\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <img\r\n            src={value}\r\n            className=\"image__img\"\r\n            alt={placeholder}\r\n            style={{ maxWidth: width || 100}}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__change\"\r\n            onClick={handleUpload}\r\n          >\r\n            Change Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__edit\"\r\n            onClick={handleEdit}\r\n          >\r\n            Resize Image\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"image__remove\"\r\n            onClick={clearImage}\r\n          >\r\n            Remove\r\n          </button>\r\n\r\n          {isEditing && (\r\n            <div ref={widthWrapper} className=\"image__width-wrapper\">\r\n              <Slider min={100} max={250} marks={marks} included={false} step={1} onChange={handleChangeWidth} defaultValue={width || 100} />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <input\r\n        ref={fileInput}\r\n        tabIndex={-1}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        className=\"image__file\"\r\n        onChange={handleChangeImage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditableFileImage\r\n","import React, { FC } from 'react'\r\nimport { Document as PdfDocument } from '@react-pdf/renderer'\r\n\r\ninterface Props {\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Document: FC<Props> = ({ pdfMode, children }) => {\r\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\r\n}\r\n\r\nexport default Document\r\n","import React, { FC } from 'react'\r\nimport { Page as PdfPage } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\r\n          {children}\r\n        </PdfPage>\r\n      ) : (\r\n        <div className={'page ' + (className ? className : '')}>{children}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React, { FC } from 'react'\r\nimport { View as PdfView } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\r\n      ) : (\r\n        <div className={'view ' + (className ? className : '')}>{children}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default View\r\n","import React, { FC } from 'react'\r\nimport { Text as PdfText } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n  children?: string\r\n}\r\n\r\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\r\n      ) : (\r\n        <span className={'span ' + (className ? className : '')}>{children}</span>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport { Invoice } from '../data/types'\r\nimport InvoicePage from './InvoicePage'\r\n\r\ninterface Props {\r\n  data: Invoice\r\n}\r\n\r\nconst Download: FC<Props> = ({ data }) => {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    setShow(false)\r\n\r\n    const timeout = setTimeout(() => {\r\n      setShow(true)\r\n    }, 500)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [data])\r\n\r\n  return (\r\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Download PDF\">\r\n      {show && (\r\n        <PDFDownloadLink\r\n          document={<InvoicePage pdfMode={true} data={data} />}\r\n          fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\r\n          aria-label=\"Download PDF\"\r\n        ></PDFDownloadLink>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Download\r\n","import React from 'react'\r\n\r\n\r\nconst AddUIButton = ({buttonClass, buttonName, hoverTitle, onButtonClick }) => {\r\n\r\n    function buttonClick() {\r\n        console.log('Button click :)');\r\n        if (typeof onButtonClick === 'function') {\r\n            onButtonClick()\r\n        } else {console.log(\"onButtonClick is not a function\")}\r\n        \r\n    }\r\n\r\n  return (\r\n    <button  \r\n    onClick={buttonClick}\r\n    className={buttonClass} \r\n    title={hoverTitle}>\r\n        <span>{buttonName}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddUIButton\r\n","function deleteLocalStorage(){\r\n    window.localStorage.removeItem(\"invoiceData\")\r\n}\r\n\r\nfunction ResetInvoice() {\r\n  deleteLocalStorage()\r\n  window.location.reload();\r\n  \r\n}\r\n\r\nexport default function getConfirmation(){\r\n  var returnVal = window.confirm(\"This will reset the form, press OK to confirm.\");\r\n  if ( returnVal === true ){\r\n      ResetInvoice();\r\n   }\r\n}\r\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { Invoice, ProductLine } from '../data/types'\r\nimport { initialInvoice, initialProductLine } from '../data/initialData'\r\nimport EditableInput from './EditableInput'\r\n//import EditableSelect from './EditableSelect'\r\nimport EditableTextarea from './EditableTextarea'\r\nimport EditableCalendarInput from './EditableCalendarInput'\r\nimport EditableFileImage from './EditableFileImage'\r\nimport Document from './Document'\r\nimport Page from './Page'\r\nimport View from './View'\r\nimport Text from './Text'\r\nimport { Font } from '@react-pdf/renderer'\r\nimport Download from './DownloadPDF'\r\nimport format from 'date-fns/format'\r\nimport AddUIButton from \"./AddUIButton\"\r\nimport getConfirmation  from './ResetInvoice'\r\n\r\nFont.register({\r\n  family: 'Nunito',\r\n  fonts: [\r\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\r\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\r\n  ],\r\n})\r\n\r\ninterface Props {\r\n  data?: Invoice\r\n  pdfMode?: boolean\r\n  onChange?: (invoice: Invoice) => void\r\n}\r\n\r\nconst InvoicePage: FC<Props> = ({ data, pdfMode, onChange }) => {\r\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\r\n  const [subTotal, setSubTotal] = useState<number>()\r\n  const [saleTax, setSaleTax] = useState<number>()\r\n\r\n  const dateFormat = 'MMM dd, yyyy'\r\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\r\n  const invoiceDueDate =\r\n    invoice.invoiceDueDate !== ''\r\n      ? new Date(invoice.invoiceDueDate)\r\n      : new Date(invoiceDate.valueOf())\r\n\r\n  if (invoice.invoiceDueDate === '') {\r\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 14)\r\n  }\r\n\r\n  const handleChange = (name: keyof Invoice, value: string | number) => {\r\n    if (name !== 'productLines') {\r\n      const newInvoice = { ...invoice }\r\n\r\n      if (name === 'logoWidth' && typeof value === 'number') {\r\n        newInvoice[name] = value\r\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\r\n        newInvoice[name] = value\r\n      }\r\n\r\n      setInvoice(newInvoice)\r\n    }\r\n  }\r\n\r\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\r\n    const productLines = invoice.productLines.map((productLine, i) => {\r\n      if (i === index) {\r\n        const newProductLine = { ...productLine }\r\n\r\n        if (name === 'description') {\r\n          newProductLine[name] = value\r\n        } else {\r\n          if (\r\n            value[value.length - 1] === '.' ||\r\n            (value[value.length - 1] === '0' && value.includes('.'))\r\n          ) {\r\n            newProductLine[name] = value\r\n          } else {\r\n            const n = parseFloat(value)\r\n\r\n            newProductLine[name] = (n ? n : 0).toString()\r\n          }\r\n        }\r\n\r\n        return newProductLine\r\n      }\r\n\r\n      return { ...productLine }\r\n    })\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const handleRemove = (i: number) => {\r\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\r\n\r\n    setInvoice({ ...invoice, productLines })\r\n  }\r\n\r\n  const calculateAmount = (quantity: string, rate: string) => {\r\n    const quantityNumber = parseFloat(quantity)\r\n    const rateNumber = parseFloat(rate)\r\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\r\n\r\n    return amount.toFixed(2)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let subTotal = 0\r\n\r\n    invoice.productLines.forEach((productLine) => {\r\n      const quantityNumber = parseFloat(productLine.quantity)\r\n      const rateNumber = parseFloat(productLine.rate)\r\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\r\n\r\n      subTotal += amount\r\n    })\r\n\r\n    setSubTotal(subTotal)\r\n  }, [invoice.productLines])\r\n\r\n  useEffect(() => {\r\n    const match = invoice.taxLabel.match(/(\\d+)%/)\r\n    const taxRate = match ? parseFloat(match[1]) : 0\r\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\r\n\r\n    setSaleTax(saleTax)\r\n  }, [subTotal, invoice.taxLabel])\r\n\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange(invoice)\r\n    }\r\n  }, [onChange, invoice])\r\n\r\n\r\n  return (\r\n    <>\r\n    <AddUIButton \r\n      buttonClass={\"button-reset-invoice\"} \r\n      buttonName=\"Reset Invoice\"\r\n      hoverTitle={\"Reset to Default\"}\r\n      onButtonClick={getConfirmation}></AddUIButton>\r\n    <AddUIButton \r\n      buttonClass={\"button-save-invoice\"} \r\n      buttonName=\"Save Invoice\"\r\n      hoverTitle={\"Save Invoice (Does not work)\"}\r\n      onButtonClick=\"\"></AddUIButton>\r\n\r\n    <Document pdfMode={pdfMode}>\r\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\r\n        {!pdfMode && <Download data={invoice} />}\r\n        \r\n        <View className=\"flex\" pdfMode={pdfMode}>\r\n          <View className=\"w-50\" pdfMode={pdfMode}>\r\n            <EditableFileImage\r\n              className=\"logo\"\r\n              placeholder=\"Firma logo\"\r\n              value={invoice.logo}\r\n              width={invoice.logoWidth}\r\n              pdfMode={pdfMode}\r\n              onChangeImage={(value) => handleChange('logo', value)}\r\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\r\n            />\r\n            <EditableInput\r\n              className=\"fs-20 bold\"\r\n              placeholder=\"Firma nimi\"\r\n              value={invoice.companyName}\r\n              onChange={(value) => handleChange('companyName', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Oru 12, 78301 Raplamaa Märjamaa\"\r\n              value={invoice.name}\r\n              onChange={(value) => handleChange('name', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Registrikood\"\r\n              value={invoice.companyAddress}\r\n              onChange={(value) => handleChange('companyAddress', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Lisainfo (vajdusel)\"\r\n              value={invoice.companyAddress2}\r\n              onChange={(value) => handleChange('companyAddress2', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Lisainfo (vajdusel)\"\r\n              value={invoice.companyCountry}\r\n              onChange={(value) => handleChange('companyCountry', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-50\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"fs-45 right bold\"\r\n              placeholder=\"Arve\"\r\n              value={invoice.title}\r\n              onChange={(value) => handleChange('title', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\r\n          <View className=\"w-60\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"bold dark mb-5\"\r\n              value={invoice.billTo}\r\n              onChange={(value) => handleChange('billTo', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Kliendi nimi\"\r\n              value={invoice.clientName}\r\n              onChange={(value) => handleChange('clientName', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Address\"\r\n              value={invoice.clientAddress}\r\n              onChange={(value) => handleChange('clientAddress', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"ZIP Maakond Vald\"\r\n              value={invoice.clientAddress2}\r\n              onChange={(value) => handleChange('clientAddress2', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n            <EditableInput\r\n              placeholder=\"Registrikood\"\r\n              value={invoice.clientCountry}\r\n              onChange={(value) => handleChange('clientCountry', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-40\" pdfMode={pdfMode}>\r\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.invoiceTitleLabel}\r\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  placeholder=\"Arve number\"\r\n                  value={invoice.invoiceTitle}\r\n                  onChange={(value) => handleChange('invoiceTitle', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.invoiceDateLabel}\r\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableCalendarInput\r\n                  value={format(invoiceDate, dateFormat)}\r\n                  selected={invoiceDate}\r\n                  onChange={(date) =>\r\n                    handleChange(\r\n                      'invoiceDate',\r\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\r\n                    )\r\n                  }\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"bold\"\r\n                  value={invoice.invoiceDueDateLabel}\r\n                  onChange={(value) => handleChange('invoiceDueDateLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50\" pdfMode={pdfMode}>\r\n                <EditableCalendarInput\r\n                  value={format(invoiceDueDate, dateFormat)}\r\n                  selected={invoiceDueDate}\r\n                  onChange={(date) =>\r\n                    handleChange(\r\n                      'invoiceDueDate',\r\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\r\n                    )\r\n                  }\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\r\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold\"\r\n              value={invoice.productLineDescription}\r\n              onChange={(value) => handleChange('productLineDescription', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantity}\r\n              onChange={(value) => handleChange('productLineQuantity', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantityRate}\r\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\r\n            <EditableInput\r\n              className=\"white bold right\"\r\n              value={invoice.productLineQuantityAmount}\r\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {invoice.productLines.map((productLine, i) => {\r\n          return pdfMode && productLine.description === '' ? (\r\n            <Text key={i}></Text>\r\n          ) : (\r\n            <View key={i} className=\"row flex\" pdfMode={pdfMode}>\r\n              <View className=\"w-48 p-4-8 pb-0\" pdfMode={pdfMode}>\r\n                <EditableTextarea\r\n                  className=\"dark\"\r\n                  rows={2}\r\n                  placeholder=\"Toote/Teenuse nimi/kirjeldus\"\r\n                  value={productLine.description}\r\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-0\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.quantity}\r\n                  onChange={(value) => handleProductLineChange(i, 'quantity', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-17 p-4-8 pb-0\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark right\"\r\n                  value={productLine.rate}\r\n                  onChange={(value) => handleProductLineChange(i, 'rate', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-18 p-4-8 pb-0\" pdfMode={pdfMode}>\r\n                <Text className=\"dark right\" pdfMode={pdfMode}>\r\n                  {calculateAmount(productLine.quantity, productLine.rate)}\r\n                </Text>\r\n              </View>\r\n              {!pdfMode && (\r\n                <button\r\n                  className=\"link row__remove\"\r\n                  aria-label=\"Remove Row\"\r\n                  title=\"Remove Row\"\r\n                  onClick={() => handleRemove(i)}\r\n                >\r\n                  <span className=\"icon icon-remove bg-red\"></span>\r\n                </button>\r\n              )}\r\n            </View>\r\n          )\r\n        })}\r\n\r\n        <View className=\"flex\" pdfMode={pdfMode}>\r\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\r\n            {!pdfMode && (\r\n              <button className=\"link\" onClick={handleAdd}>\r\n                <span className=\"icon icon-add bg-green mr-10\"></span>\r\n                Lisa rida\r\n              </button>\r\n            )}\r\n          </View>\r\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  placeholder='Summa KM-ta'\r\n                  value={invoice.subTotalLabel}\r\n                  onChange={(value) => handleChange('subTotalLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\r\n                  {subTotal?.toFixed(2)}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  placeholder='KM (20%)'\r\n                  value={invoice.taxLabel}\r\n                  onChange={(value) => handleChange('taxLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\r\n                  {saleTax?.toFixed(2)}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\r\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  placeholder='Arve kokku'\r\n                  className=\"bold\"\r\n                  value={invoice.totalLabel}\r\n                  onChange={(value) => handleChange('totalLabel', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n              </View>\r\n              <View className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\r\n                <EditableInput\r\n                  className=\"dark bold right ml-30\"\r\n                  value={invoice.currency}\r\n                  onChange={(value) => handleChange('currency', value)}\r\n                  pdfMode={pdfMode}\r\n                />\r\n                <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\r\n                  {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\r\n                    ? subTotal + saleTax\r\n                    : 0\r\n                  ).toFixed(2)}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View className=\"mt-20\" pdfMode={pdfMode}>\r\n          <EditableInput\r\n            className=\"bold w-100\"\r\n            placeholder='Lisainfo pealkiri (vajadusel)'\r\n            value={invoice.notesLabel}\r\n            onChange={(value) => handleChange('notesLabel', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n          <EditableTextarea\r\n            className=\"w-100 fake-mb-100\"\r\n            rows={2}\r\n            placeholder='Lisainfo (vajadusel)'\r\n            value={invoice.notes}\r\n            onChange={(value) => handleChange('notes', value)}\r\n            pdfMode={pdfMode}\r\n          />\r\n        </View>\r\n        \r\n\r\n        <View className=\"flex-container mt-30 invoice-footer\" pdfMode={pdfMode}>\r\n          <View className=\"w-15 ml-35 mt-20\" pdfMode={pdfMode}>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <EditableInput\r\n                      placeholder=\"Panga nimi\"\r\n                      value={invoice.bank1}\r\n                      onChange={(value) => handleChange('bank1', value)}\r\n                      pdfMode={pdfMode}\r\n              />\r\n            </View>\r\n            <EditableInput\r\n                    placeholder=\"Panga nimi\"\r\n                    value={invoice.bank2}\r\n                    onChange={(value) => handleChange('bank2', value)}\r\n                    pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-30 mt-20\" pdfMode={pdfMode}>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <EditableInput\r\n                placeholder=\"IBAN\"\r\n                value={invoice.bank1IBAN}\r\n                onChange={(value) => handleChange('bank1IBAN', value)}\r\n                pdfMode={pdfMode}\r\n              />\r\n            </View>\r\n          <EditableInput\r\n              placeholder=\"IBAN\"\r\n              value={invoice.bank2IBAN}\r\n              onChange={(value) => handleChange('bank2IBAN', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n          <View className=\"w-15 mt-20\" pdfMode={pdfMode}>\r\n            <View className=\"flex\" pdfMode={pdfMode}>\r\n              <EditableInput\r\n                placeholder=\"(SWIFT)\"\r\n                value={invoice.bank1SWIFT}\r\n                onChange={(value) => handleChange('bank1SWIFT', value)}\r\n                pdfMode={pdfMode}\r\n              />\r\n            </View>\r\n            <EditableInput\r\n                placeholder=\"(SWIFT)\"\r\n                value={invoice.bank2SWIFT}\r\n                onChange={(value) => handleChange('bank2SWIFT', value)}\r\n                pdfMode={pdfMode}\r\n              />\r\n          </View>\r\n          <View className=\"w-40  mr-35 mt-5\" pdfMode={pdfMode}>\r\n            <EditableTextarea\r\n              className=\"w-100 center mb-10\"\r\n              rows={4}\r\n              placeholder=\"Firma lisainfo, kontakt, epost, tel, www\"\r\n              value={invoice.firmaLisainfo}\r\n              onChange={(value) => handleChange('firmaLisainfo', value)}\r\n              pdfMode={pdfMode}\r\n            />\r\n          </View>\r\n        </View>\r\n        \r\n      </Page>\r\n    </Document>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InvoicePage\r\n","import React from 'react'\r\nimport InvoicePage from './components/InvoicePage'\r\nimport { Invoice } from './data/types'\r\n\r\nfunction App() {\r\n  const savedInvoice = window.localStorage.getItem('invoiceData')\r\n  let data = null\r\n\r\n  try {\r\n    if (savedInvoice) {\r\n      data = JSON.parse(savedInvoice)\r\n    }\r\n  } catch (_e) { }\r\n\r\n  const onInvoiceUpdated = (invoice: Invoice) => {\r\n    window.localStorage.setItem('invoiceData', JSON.stringify(invoice))\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <InvoicePage data={data} onChange={onInvoiceUpdated} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './scss/main.scss'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}